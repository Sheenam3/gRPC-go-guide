// Code generated by protoc-gen-go. DO NOT EDIT.
// source: quotes.proto

package quotes

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OneQuoteRequest struct {
	Quoteone             string   `protobuf:"bytes,1,opt,name=quoteone,proto3" json:"quoteone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneQuoteRequest) Reset()         { *m = OneQuoteRequest{} }
func (m *OneQuoteRequest) String() string { return proto.CompactTextString(m) }
func (*OneQuoteRequest) ProtoMessage()    {}
func (*OneQuoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{0}
}

func (m *OneQuoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneQuoteRequest.Unmarshal(m, b)
}
func (m *OneQuoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneQuoteRequest.Marshal(b, m, deterministic)
}
func (m *OneQuoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneQuoteRequest.Merge(m, src)
}
func (m *OneQuoteRequest) XXX_Size() int {
	return xxx_messageInfo_OneQuoteRequest.Size(m)
}
func (m *OneQuoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OneQuoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OneQuoteRequest proto.InternalMessageInfo

func (m *OneQuoteRequest) GetQuoteone() string {
	if m != nil {
		return m.Quoteone
	}
	return ""
}

type OneQuoteResponse struct {
	Quote                string   `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneQuoteResponse) Reset()         { *m = OneQuoteResponse{} }
func (m *OneQuoteResponse) String() string { return proto.CompactTextString(m) }
func (*OneQuoteResponse) ProtoMessage()    {}
func (*OneQuoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{1}
}

func (m *OneQuoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneQuoteResponse.Unmarshal(m, b)
}
func (m *OneQuoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneQuoteResponse.Marshal(b, m, deterministic)
}
func (m *OneQuoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneQuoteResponse.Merge(m, src)
}
func (m *OneQuoteResponse) XXX_Size() int {
	return xxx_messageInfo_OneQuoteResponse.Size(m)
}
func (m *OneQuoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OneQuoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OneQuoteResponse proto.InternalMessageInfo

func (m *OneQuoteResponse) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

type ThreeQuoteRequest struct {
	Quote1Request        string   `protobuf:"bytes,1,opt,name=quote1_request,json=quote1Request,proto3" json:"quote1_request,omitempty"`
	Quote2Request        string   `protobuf:"bytes,2,opt,name=quote2_request,json=quote2Request,proto3" json:"quote2_request,omitempty"`
	Quote3Request        string   `protobuf:"bytes,3,opt,name=quote3_request,json=quote3Request,proto3" json:"quote3_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreeQuoteRequest) Reset()         { *m = ThreeQuoteRequest{} }
func (m *ThreeQuoteRequest) String() string { return proto.CompactTextString(m) }
func (*ThreeQuoteRequest) ProtoMessage()    {}
func (*ThreeQuoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{2}
}

func (m *ThreeQuoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreeQuoteRequest.Unmarshal(m, b)
}
func (m *ThreeQuoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreeQuoteRequest.Marshal(b, m, deterministic)
}
func (m *ThreeQuoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreeQuoteRequest.Merge(m, src)
}
func (m *ThreeQuoteRequest) XXX_Size() int {
	return xxx_messageInfo_ThreeQuoteRequest.Size(m)
}
func (m *ThreeQuoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreeQuoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ThreeQuoteRequest proto.InternalMessageInfo

func (m *ThreeQuoteRequest) GetQuote1Request() string {
	if m != nil {
		return m.Quote1Request
	}
	return ""
}

func (m *ThreeQuoteRequest) GetQuote2Request() string {
	if m != nil {
		return m.Quote2Request
	}
	return ""
}

func (m *ThreeQuoteRequest) GetQuote3Request() string {
	if m != nil {
		return m.Quote3Request
	}
	return ""
}

type ThreeQuoteResponse struct {
	Quote1Response       string   `protobuf:"bytes,1,opt,name=quote1_response,json=quote1Response,proto3" json:"quote1_response,omitempty"`
	Quote2Response       string   `protobuf:"bytes,2,opt,name=quote2_response,json=quote2Response,proto3" json:"quote2_response,omitempty"`
	Quote3Response       string   `protobuf:"bytes,3,opt,name=quote3_response,json=quote3Response,proto3" json:"quote3_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreeQuoteResponse) Reset()         { *m = ThreeQuoteResponse{} }
func (m *ThreeQuoteResponse) String() string { return proto.CompactTextString(m) }
func (*ThreeQuoteResponse) ProtoMessage()    {}
func (*ThreeQuoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{3}
}

func (m *ThreeQuoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreeQuoteResponse.Unmarshal(m, b)
}
func (m *ThreeQuoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreeQuoteResponse.Marshal(b, m, deterministic)
}
func (m *ThreeQuoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreeQuoteResponse.Merge(m, src)
}
func (m *ThreeQuoteResponse) XXX_Size() int {
	return xxx_messageInfo_ThreeQuoteResponse.Size(m)
}
func (m *ThreeQuoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreeQuoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ThreeQuoteResponse proto.InternalMessageInfo

func (m *ThreeQuoteResponse) GetQuote1Response() string {
	if m != nil {
		return m.Quote1Response
	}
	return ""
}

func (m *ThreeQuoteResponse) GetQuote2Response() string {
	if m != nil {
		return m.Quote2Response
	}
	return ""
}

func (m *ThreeQuoteResponse) GetQuote3Response() string {
	if m != nil {
		return m.Quote3Response
	}
	return ""
}

func init() {
	proto.RegisterType((*OneQuoteRequest)(nil), "OneQuoteRequest")
	proto.RegisterType((*OneQuoteResponse)(nil), "OneQuoteResponse")
	proto.RegisterType((*ThreeQuoteRequest)(nil), "ThreeQuoteRequest")
	proto.RegisterType((*ThreeQuoteResponse)(nil), "ThreeQuoteResponse")
}

func init() {
	proto.RegisterFile("quotes.proto", fileDescriptor_aa8c397fe3f70398)
}

var fileDescriptor_aa8c397fe3f70398 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd2, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0xf0, 0x5e, 0xab, 0x56, 0x70, 0xd0, 0x7f, 0x07, 0x03, 0xea, 0x84, 0x2c, 0x21, 0xb2,
	0x60, 0x15, 0x1b, 0x36, 0x46, 0x24, 0xd8, 0x2a, 0x2a, 0x76, 0x54, 0xc4, 0x49, 0x74, 0x89, 0xdb,
	0x38, 0x19, 0xfa, 0x06, 0x6c, 0x3c, 0x28, 0x2f, 0x81, 0x70, 0x5c, 0xc7, 0x38, 0x0b, 0x8c, 0xfe,
	0xfc, 0xbb, 0xe8, 0xb3, 0x63, 0x3c, 0xde, 0x56, 0xa6, 0x64, 0x2b, 0x37, 0x85, 0x29, 0x8d, 0xb8,
	0xc2, 0xf1, 0x22, 0xe7, 0xa7, 0x9f, 0x68, 0xc9, 0xdb, 0x8a, 0x6d, 0x49, 0x33, 0x3c, 0x70, 0xc4,
	0xe4, 0x7c, 0x06, 0xe7, 0x90, 0x1d, 0x2e, 0xc3, 0x5a, 0x64, 0x38, 0x69, 0xb8, 0xdd, 0x98, 0xdc,
	0x32, 0x9d, 0x62, 0xdf, 0xed, 0x7b, 0x5c, 0x2f, 0xc4, 0x07, 0xe0, 0xf4, 0xf9, 0xbd, 0xe0, 0xdf,
	0xdf, 0xbe, 0xc0, 0x91, 0xdb, 0xbe, 0x7e, 0x29, 0xea, 0xc4, 0x0f, 0x0d, 0xeb, 0x34, 0x65, 0x2a,
	0xb0, 0x6e, 0xc4, 0x54, 0xca, 0x74, 0x60, 0xbd, 0x88, 0x69, 0xcf, 0xc4, 0x27, 0x20, 0xc5, 0x55,
	0x7c, 0xef, 0x4b, 0x1c, 0x87, 0x2e, 0x75, 0xe4, 0xcb, 0x8c, 0xf6, 0x65, 0x12, 0xa8, 0x1a, 0xd8,
	0x8d, 0xa0, 0x6a, 0x41, 0xdd, 0xc0, 0x5e, 0x04, 0xf5, 0x1e, 0xaa, 0x2f, 0x40, 0x74, 0x65, 0x1e,
	0xaa, 0xf5, 0x1b, 0xd3, 0x0d, 0x1e, 0x2d, 0x72, 0xbe, 0x5f, 0xed, 0x5c, 0x46, 0x13, 0x99, 0xfc,
	0x92, 0xd9, 0x54, 0xa6, 0xb7, 0x2e, 0x3a, 0x74, 0x87, 0x43, 0x77, 0xaa, 0x30, 0x47, 0xb2, 0x75,
	0xe1, 0xb3, 0x13, 0xd9, 0x3e, 0xb9, 0xe8, 0xcc, 0x81, 0x6e, 0x71, 0xe0, 0x42, 0xfb, 0x8f, 0xb1,
	0x0c, 0x48, 0x61, 0xdf, 0xae, 0x76, 0x8f, 0xeb, 0x3f, 0x96, 0xcc, 0x60, 0x0e, 0xaf, 0x03, 0xf7,
	0xd4, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x65, 0x3b, 0x5b, 0x7a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QuoteGuideClient is the client API for QuoteGuide service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuoteGuideClient interface {
	//simple RPC
	OneDayQuote(ctx context.Context, in *OneQuoteRequest, opts ...grpc.CallOption) (*OneQuoteResponse, error)
	ThreeDayQuote(ctx context.Context, in *ThreeQuoteRequest, opts ...grpc.CallOption) (QuoteGuide_ThreeDayQuoteClient, error)
	Quotes(ctx context.Context, opts ...grpc.CallOption) (QuoteGuide_QuotesClient, error)
	SayHi(ctx context.Context, opts ...grpc.CallOption) (QuoteGuide_SayHiClient, error)
}

type quoteGuideClient struct {
	cc grpc.ClientConnInterface
}

func NewQuoteGuideClient(cc grpc.ClientConnInterface) QuoteGuideClient {
	return &quoteGuideClient{cc}
}

func (c *quoteGuideClient) OneDayQuote(ctx context.Context, in *OneQuoteRequest, opts ...grpc.CallOption) (*OneQuoteResponse, error) {
	out := new(OneQuoteResponse)
	err := c.cc.Invoke(ctx, "/QuoteGuide/OneDayQuote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quoteGuideClient) ThreeDayQuote(ctx context.Context, in *ThreeQuoteRequest, opts ...grpc.CallOption) (QuoteGuide_ThreeDayQuoteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QuoteGuide_serviceDesc.Streams[0], "/QuoteGuide/ThreeDayQuote", opts...)
	if err != nil {
		return nil, err
	}
	x := &quoteGuideThreeDayQuoteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QuoteGuide_ThreeDayQuoteClient interface {
	Recv() (*ThreeQuoteResponse, error)
	grpc.ClientStream
}

type quoteGuideThreeDayQuoteClient struct {
	grpc.ClientStream
}

func (x *quoteGuideThreeDayQuoteClient) Recv() (*ThreeQuoteResponse, error) {
	m := new(ThreeQuoteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *quoteGuideClient) Quotes(ctx context.Context, opts ...grpc.CallOption) (QuoteGuide_QuotesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QuoteGuide_serviceDesc.Streams[1], "/QuoteGuide/Quotes", opts...)
	if err != nil {
		return nil, err
	}
	x := &quoteGuideQuotesClient{stream}
	return x, nil
}

type QuoteGuide_QuotesClient interface {
	Send(*ThreeQuoteRequest) error
	CloseAndRecv() (*ThreeQuoteResponse, error)
	grpc.ClientStream
}

type quoteGuideQuotesClient struct {
	grpc.ClientStream
}

func (x *quoteGuideQuotesClient) Send(m *ThreeQuoteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *quoteGuideQuotesClient) CloseAndRecv() (*ThreeQuoteResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ThreeQuoteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *quoteGuideClient) SayHi(ctx context.Context, opts ...grpc.CallOption) (QuoteGuide_SayHiClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QuoteGuide_serviceDesc.Streams[2], "/QuoteGuide/sayHi", opts...)
	if err != nil {
		return nil, err
	}
	x := &quoteGuideSayHiClient{stream}
	return x, nil
}

type QuoteGuide_SayHiClient interface {
	Send(*OneQuoteRequest) error
	Recv() (*OneQuoteResponse, error)
	grpc.ClientStream
}

type quoteGuideSayHiClient struct {
	grpc.ClientStream
}

func (x *quoteGuideSayHiClient) Send(m *OneQuoteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *quoteGuideSayHiClient) Recv() (*OneQuoteResponse, error) {
	m := new(OneQuoteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QuoteGuideServer is the server API for QuoteGuide service.
type QuoteGuideServer interface {
	//simple RPC
	OneDayQuote(context.Context, *OneQuoteRequest) (*OneQuoteResponse, error)
	ThreeDayQuote(*ThreeQuoteRequest, QuoteGuide_ThreeDayQuoteServer) error
	Quotes(QuoteGuide_QuotesServer) error
	SayHi(QuoteGuide_SayHiServer) error
}

// UnimplementedQuoteGuideServer can be embedded to have forward compatible implementations.
type UnimplementedQuoteGuideServer struct {
}

func (*UnimplementedQuoteGuideServer) OneDayQuote(ctx context.Context, req *OneQuoteRequest) (*OneQuoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OneDayQuote not implemented")
}
func (*UnimplementedQuoteGuideServer) ThreeDayQuote(req *ThreeQuoteRequest, srv QuoteGuide_ThreeDayQuoteServer) error {
	return status.Errorf(codes.Unimplemented, "method ThreeDayQuote not implemented")
}
func (*UnimplementedQuoteGuideServer) Quotes(srv QuoteGuide_QuotesServer) error {
	return status.Errorf(codes.Unimplemented, "method Quotes not implemented")
}
func (*UnimplementedQuoteGuideServer) SayHi(srv QuoteGuide_SayHiServer) error {
	return status.Errorf(codes.Unimplemented, "method SayHi not implemented")
}

func RegisterQuoteGuideServer(s *grpc.Server, srv QuoteGuideServer) {
	s.RegisterService(&_QuoteGuide_serviceDesc, srv)
}

func _QuoteGuide_OneDayQuote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneQuoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuoteGuideServer).OneDayQuote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuoteGuide/OneDayQuote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuoteGuideServer).OneDayQuote(ctx, req.(*OneQuoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuoteGuide_ThreeDayQuote_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ThreeQuoteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QuoteGuideServer).ThreeDayQuote(m, &quoteGuideThreeDayQuoteServer{stream})
}

type QuoteGuide_ThreeDayQuoteServer interface {
	Send(*ThreeQuoteResponse) error
	grpc.ServerStream
}

type quoteGuideThreeDayQuoteServer struct {
	grpc.ServerStream
}

func (x *quoteGuideThreeDayQuoteServer) Send(m *ThreeQuoteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _QuoteGuide_Quotes_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QuoteGuideServer).Quotes(&quoteGuideQuotesServer{stream})
}

type QuoteGuide_QuotesServer interface {
	SendAndClose(*ThreeQuoteResponse) error
	Recv() (*ThreeQuoteRequest, error)
	grpc.ServerStream
}

type quoteGuideQuotesServer struct {
	grpc.ServerStream
}

func (x *quoteGuideQuotesServer) SendAndClose(m *ThreeQuoteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *quoteGuideQuotesServer) Recv() (*ThreeQuoteRequest, error) {
	m := new(ThreeQuoteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _QuoteGuide_SayHi_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(QuoteGuideServer).SayHi(&quoteGuideSayHiServer{stream})
}

type QuoteGuide_SayHiServer interface {
	Send(*OneQuoteResponse) error
	Recv() (*OneQuoteRequest, error)
	grpc.ServerStream
}

type quoteGuideSayHiServer struct {
	grpc.ServerStream
}

func (x *quoteGuideSayHiServer) Send(m *OneQuoteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *quoteGuideSayHiServer) Recv() (*OneQuoteRequest, error) {
	m := new(OneQuoteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _QuoteGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QuoteGuide",
	HandlerType: (*QuoteGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OneDayQuote",
			Handler:    _QuoteGuide_OneDayQuote_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ThreeDayQuote",
			Handler:       _QuoteGuide_ThreeDayQuote_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Quotes",
			Handler:       _QuoteGuide_Quotes_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "sayHi",
			Handler:       _QuoteGuide_SayHi_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "quotes.proto",
}
